name: Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-app:${{ github.sha }} \
                       -t ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-app:latest .

      - name: Publish image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-app:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-app:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Pull latest image in docker-compose
        run: |
          export IMAGE_TAG=${{ secrets.DOCKERHUB_USERNAME }}/nodejs-app:${{ github.sha }}
          sed -i "s|image:.*|image: $IMAGE_TAG|g" docker-compose.yml

      - name: Deploy using docker-compose
        run: |
          docker-compose down || true # Stop any running containers
          docker-compose pull          # Pull the latest image
          docker-compose up -d         # Start the updated containers

      - name: Clean up old images
        run: docker system prune -f
